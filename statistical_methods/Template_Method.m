
classdef Template_Method

    properties (Constant)
        level = "edge";
        permutation_based = true;

        % Optional: overides global perm number
        permutations = 800; 
        % Optional: calculates multiple pvalue inference submethods 
        submethod = {'cpp_submethod', 'FWER','FDR'};
    end
    
    methods

        function pval = run_method(~,varargin)
            
            % Retrieve data generated by SHOCK for the method
            params = struct(varargin{:});
            
            % Calculation parameters - type of test, variables, etc
            STATS = params.statistical_parameters;
            
            % T-statistics calculated from the sampled data
            edge_stats_target = params.edge_stats;
        
            % T-statisitcs calculated from permutations
            permuted_edge_stats = params.permuted_edge_data;
            
            % Pvalues are returned in a struct with fields
            % as submethod names, or in a single vector
            % if there are no submethods.
            pval = struct();

            % For Cpp accelaretion use mex created functions
            pval.cpp_submethod = template_method_cpp(params.edge_stats);
            pval.FWER = template_method_with_FWER(params.edge_stats);
            pval.FDR = template_method_with_FDR(params.edge_stats);
            
            % The methods need to return 1 pvalue vector per variable per
            % submethod 
            
        end

    end

end





